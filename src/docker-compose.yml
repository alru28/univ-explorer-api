services:
  gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - collection-service
    environment:
      - COLLECTION_SERVICE_URL=http://collection-service:8000
      - AUTH_SERVICE_URL=http://auth-service:3000
      - EXPLORATION_SERVICE_URL=http://exploration-service:8000
    networks:
      - univ-network

  auth-service:
    build: ./auth-service
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres_user
      - DB_PASSWORD=postgres_pass
      - DB_NAME=user_db
      - JWT_SECRET=example_secret
    networks:
      - univ-network
    depends_on:
      - postgres

  collection-service:
    build: ./celestial-collection
    networks:
      - univ-network

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_pass
      POSTGRES_DB: user_db
    networks:
      - univ-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init/init_postgres.sql:/docker-entrypoint-initdb.d/init_postgres.sql

  ollama:
    image: ollama/ollama
    #ports:               # Theoretically not needed
    #  - "11434:11434"
    networks:
      - univ-network

  mongodb:
    image: mongo:4.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_user
      MONGO_INITDB_ROOT_PASSWORD: mongo_pass
    networks:
      - univ-network
    volumes:
      - mongodb_data:/data/db
      - ./init/init_mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    command: mongod --quiet --logpath /dev/null  # No logs in stdo

  exploration-service:
    build:
      context: ./exploration-service
    environment:
      - OLLAMA_URL=http://ollama:11434
      - MONGODB_URL=mongodb://mongo_user:mongo_pass@mongodb:27017/exploration_db
    depends_on:
      - ollama
      - mongodb
    networks:
      - univ-network

volumes:
  postgres_data:
  mongodb_data:

networks:
  univ-network:
    driver: bridge